// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldBirth holds the string denoting the birth field in the database.
	FieldBirth = "birth"
	// FieldTel holds the string denoting the tel field in the database.
	FieldTel = "tel"

	// EdgeConfirmation holds the string denoting the confirmation edge name in mutations.
	EdgeConfirmation = "confirmation"
	// EdgeBill holds the string denoting the bill edge name in mutations.
	EdgeBill = "bill"

	// Table holds the table name of the user in the database.
	Table = "users"
	// ConfirmationTable is the table the holds the confirmation relation/edge.
	ConfirmationTable = "confirmations"
	// ConfirmationInverseTable is the table name for the Confirmation entity.
	// It exists in this package in order to avoid circular dependency with the "confirmation" package.
	ConfirmationInverseTable = "confirmations"
	// ConfirmationColumn is the table column denoting the confirmation relation/edge.
	ConfirmationColumn = "owner_id"
	// BillTable is the table the holds the bill relation/edge.
	BillTable = "bills"
	// BillInverseTable is the table name for the Bill entity.
	// It exists in this package in order to avoid circular dependency with the "bill" package.
	BillInverseTable = "bills"
	// BillColumn is the table column denoting the bill relation/edge.
	BillColumn = "owner_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldAge,
	FieldName,
	FieldEmail,
	FieldPassword,
	FieldBirth,
	FieldTel,
}

var (
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
)
