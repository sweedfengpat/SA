basePath: /api/v1
definitions:
  ent.Bank:
    properties:
      Bank:
        description: Bank holds the value of the "Bank" field.
        type: string
      edges:
        $ref: '#/definitions/ent.BankEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BankQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.BankEdges:
    properties:
      bill:
        description: Bill holds the value of the bill edge.
        items:
          $ref: '#/definitions/ent.Bill'
        type: array
    type: object
  ent.Bill:
    properties:
      Pay_number:
        description: PayNumber holds the value of the "Pay_number" field.
        type: integer
      Pay_time:
        description: PayTime holds the value of the "Pay_time" field.
        type: string
      Pay_total:
        description: PayTotal holds the value of the "Pay_total" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.BillEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BillQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.BillEdges:
    properties:
      bank:
        $ref: '#/definitions/ent.Bank'
        description: Bank holds the value of the bank edge.
        type: object
      confirmation:
        $ref: '#/definitions/ent.Confirmation'
        description: Confirmation holds the value of the confirmation edge.
        type: object
      owner:
        $ref: '#/definitions/ent.User'
        description: Owner holds the value of the owner edge.
        type: object
    type: object
  ent.Confirmation:
    properties:
      adddate:
        description: Adddate holds the value of the "adddate" field.
        type: string
      bookingend:
        description: Bookingend holds the value of the "bookingend" field.
        type: string
      bookingstart:
        description: Bookingstart holds the value of the "bookingstart" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ConfirmationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ConfirmationQuery when eager-loading is set.
        type: object
      hourstime:
        description: Hourstime holds the value of the "hourstime" field.
        type: integer
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ConfirmationEdges:
    properties:
      bill:
        description: Bill holds the value of the bill edge.
        items:
          $ref: '#/definitions/ent.Bill'
        type: array
      owner:
        $ref: '#/definitions/ent.User'
        description: Owner holds the value of the owner edge.
        type: object
    type: object
  ent.User:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      birth:
        description: Birth holds the value of the "birth" field.
        type: string
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
      tel:
        description: Tel holds the value of the "tel" field.
        type: integer
    type: object
  ent.UserEdges:
    properties:
      bill:
        description: Bill holds the value of the bill edge.
        items:
          $ref: '#/definitions/ent.Bill'
        type: array
      confirmation:
        description: Confirmation holds the value of the confirmation edge.
        items:
          $ref: '#/definitions/ent.Confirmation'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Playlist Vidoe
  version: "1.0"
paths:
  /banks:
    get:
      description: list bank entities
      operationId: list-bank
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bank'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bank entities
    post:
      consumes:
      - application/json
      description: Create bank
      operationId: create-bank
      parameters:
      - description: Bank entity
        in: body
        name: bank
        required: true
        schema:
          $ref: '#/definitions/ent.Bank'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bank'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bank
  /banks/{id}:
    get:
      description: get bank by ID
      operationId: get-bank
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bank'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a bank entity by ID
  /bills:
    get:
      description: list bill entities
      operationId: list-bill
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bill'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bill entities
    post:
      consumes:
      - application/json
      description: Create bill
      operationId: create-bill
      parameters:
      - description: Bill entity
        in: body
        name: bill
        required: true
        schema:
          $ref: '#/definitions/ent.Bill'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bill'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bill
  /confirmations:
    get:
      description: list confirmation entities
      operationId: list-confirmation
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Confirmation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List confirmation entities
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
